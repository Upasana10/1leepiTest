<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>CucumberReports</groupId>
	<artifactId>CucumberReports</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<dependencies>
		<!-- https://mvnrepository.com/artifact/info.cukes/cucumber-junit -->
		<dependency>
			<groupId>info.cukes</groupId>
			<artifactId>cucumber-junit</artifactId>
			<version>1.2.5</version>
			<scope>test</scope>
		</dependency>
		<!-- https://mvnrepository.com/artifact/info.cukes/cucumber-java -->
		<dependency>
			<groupId>info.cukes</groupId>
			<artifactId>cucumber-java</artifactId>
			<version>1.2.5</version>
		</dependency>
		<!-- https://mvnrepository.com/artifact/info.cukes/cucumber-core -->
		<dependency>
			<groupId>info.cukes</groupId>
			<artifactId>cucumber-core</artifactId>
			<version>1.2.5</version>
		</dependency>
		<!-- https://mvnrepository.com/artifact/info.cukes/cucumber-picocontainer -->
		<dependency>
			<groupId>info.cukes</groupId>
			<artifactId>cucumber-picocontainer</artifactId>
			<version>1.2.5</version>
			<scope>test</scope>
		</dependency>
		<!-- https://mvnrepository.com/artifact/info.cukes/gherkin -->
		<dependency>
			<groupId>info.cukes</groupId>
			<artifactId>gherkin</artifactId>
			<version>2.12.2</version>
			<scope>provided</scope>
		</dependency>
		<!-- https://mvnrepository.com/artifact/junit/junit -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.12</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.seleniumhq.selenium</groupId>
			<artifactId>selenium-java</artifactId>
			<version>3.5.3</version>
		</dependency>
		<!-- https://mvnrepository.com/artifact/org.seleniumhq.selenium/selenium-chrome-driver -->
		<!-- https://mvnrepository.com/artifact/org.seleniumhq.selenium/selenium-chrome-driver -->
<dependency>
    <groupId>org.seleniumhq.selenium</groupId>
    <artifactId>selenium-chrome-driver</artifactId>
    <version>3.5.3</version>
</dependency>


		<dependency>
			<groupId>net.masterthought</groupId>
			<artifactId>cucumber-reporting</artifactId>
			<version>0.0.24</version>
		</dependency>
	</dependencies>
	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.19.1</version>
				
				 <dependencies>
              <dependency>
                <groupId>org.apache.maven.surefire</groupId>
                <artifactId>surefire-junit47</artifactId>
                <version>2.19.1</version>
              </dependency>
</dependencies>
				<!-- <configuration>
					<testFailureIgnore>true</testFailureIgnore>
					<includes>
						<exclude>**/*BDDTest.java</exclude>
					</includes>
				</configuration> -->
				<configuration>
				
					<!-- <testFailureIgnore>true</testFailureIgnore> -->
					<!-- <suiteXmlFiles> <suiteXmlFile>src/main/resources/testng/testng.xml</suiteXmlFile> 
						</suiteXmlFiles> -->
					<additionalClasspathElements>
						<additionalClasspathElement>generated-test-sources</additionalClasspathElement>
					</additionalClasspathElements>
					<forkCount>5</forkCount>
					<reuseForks>false</reuseForks>
					<includes>
						<include>**/*IT*.class</include>
					</includes>
					<rerunFailingTestsCount>2</rerunFailingTestsCount>
				</configuration>
				
			</plugin>
			<plugin>
				<groupId>net.masterthought</groupId>
				<artifactId>maven-cucumber-reporting</artifactId>
				<version>0.0.5</version>
				<!-- <dependencies> <dependency> <groupId>com.googlecode.totallylazy</groupId> 
					<artifactId>totallylazy</artifactId> <version>991</version> <scope>system</scope> 
					<systemPath>${project.basedir}/lib/totallylazy-991.jar</systemPath> </dependency> 
					</dependencies> -->
				<executions>
					<execution>
						<id>execution</id>
						<phase>verify</phase>
						<goals>
							<goal>generate</goal>
						</goals>
						<configuration>
							<projectName>CucumberReports</projectName>
							<outputDirectory>${project.build.directory}/site/cucumber-reports</outputDirectory>
							<cucumberOutput>${project.build.directory}/cucumber.json</cucumberOutput>
							<enableFlashCharts>false</enableFlashCharts>
							<skippedFails>true</skippedFails>
						</configuration>
					</execution>
				</executions>
			</plugin>
			
				<plugin>
				<groupId>com.github.temyers</groupId>
				<artifactId>cucumber-jvm-parallel-plugin</artifactId>
				<version>4.1.0</version>
				<executions>
					<execution>
						<id>generateRunners</id>
						<phase>generate-test-sources</phase>
						<goals>
							<goal>generateRunners</goal>
						</goals>
						<configuration>
							<!-- Mandatory -->
							<!-- List of package names to scan for glue code. -->
							<glue>
								<package>com.stepdef</package>
							</glue>
							<!-- These are optional, with the default values -->
							<!-- Where to output the generated tests -->
							<outputDirectory>${project.build.directory}/generated-test-sources/cucumber</outputDirectory>
							<!-- The directory, which must be in the root of the runtime classpath, 
								containing your feature files. -->
							<featuresDirectory>src/test/resources/features/</featuresDirectory>
							<!-- Directory where the cucumber report files shall be written -->
							<cucumberOutputDir>target/cucumber-parallel</cucumberOutputDir>
							<!-- List of cucumber plugins. When none are provided the json formatter 
								is used. For more advanced usage see section about configuring cucumber plugins -->
							<plugins>
				<!-- 				<plugin>
									<name>com.util.ReportListener</name>
								</plugin> -->
						<!-- 		<plugin>
									The available options are junit, testng, html, pretty, json,
									usage and rerun
									<name>pretty</name>
									Optional file extension. For build in cucumber plugins a
									sensible
									default is provided.
									<extension>html</extension>
									Optional output directory. Overrides cucumberOutputDirectory.
									Usefull when different plugins create files with the same
									extension
									<outputDirectory>${project.build.directory}/cucumber-parallel/json</outputDirectory>
								</plugin> -->
							</plugins>


							<!-- The tags to run, maps to CucumberOptions.tags property. Default 
								is no tags. -->
							<!--<tags> <tag>@Run</tag> </tags> -->

							<!-- Generate TestNG runners instead of JUnit ones. -->
							<useTestNG>false</useTestNG>
							<!-- The naming scheme to use for the generated test classes. One 
								of 'simple' or 'feature-title' -->
							<namingScheme>simple</namingScheme>
							<!-- The class naming pattern to use. Only required/used if naming 
								scheme is 'pattern'. -->
							<namingPattern>Parallel{c}IT</namingPattern>
							<!-- One of [SCENARIO, FEATURE]. SCENARIO generates one runner per 
								scenario. FEATURE generates a runner per feature. -->
							<parallelScheme>FEATURE</parallelScheme>
							<!-- <customVmTemplate>src/test/resources/cucumber-extents-report-runner.java.vm</customVmTemplate> -->
						</configuration>
					</execution>
				</executions>
			</plugin>
			
			
		</plugins>
		<pluginManagement>
			<plugins>
				<!--This plugin's configuration is used to store Eclipse m2e settings only. It has no influence on the Maven build itself.-->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>
											com.github.temyers
										</groupId>
										<artifactId>
											cucumber-jvm-parallel-plugin
										</artifactId>
										<versionRange>
											[4.1.0,)
										</versionRange>
										<goals>
											<goal>generateRunners</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>
</project>